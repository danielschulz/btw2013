{
    "contents" : "\n# SETUP WORKSPACE\n\nlibrary(e1071)\nlibrary(randomForest)\nlibrary(kernlab)\n\nset.seed(4711)\n\n# clean\nrm(list = ls()[!(ls() %in% PERSISTENT_CONSTANTS)])\n\n\n# constants\nPERSISTENT_CONSTANTS = c(\"PERSISTENT_CONSTANTS\")\n\n\n\n# INIT DATA\n\n# load trainings data: data\ndataLocation = \"output\\\\data\\\\train.RData\"\na = load(dataLocation)\n\n\n# load test data: test\ndataLocation = \"output\\\\data\\\\test.RData\"\nb = load(dataLocation)\n\n\nnames = names(test)\ntest$survived = \"0\"\ntest = test[c(\"survived\", names)]\n\nrm(list=c(\"a\", \"b\", \"dataLocation\", \"names\"))\n\n# x = lapply(data$survived, FUN= function (x) {return (x == \"1\")})\n# data$survived = FALSE\n# data$survived = as.factor(data$survived)\n# data$survived = c(x)\n\ntestDataIndex = c(rep(FALSE, nrow(data)), rep(TRUE, nrow(test)))\nd = rbind(data, test)\n\n# d[c(TRUE, TRUE, rep(FALSE, 1307)),]$pclass = 5\n\n\n# svm classification\nformula = survived ~ .\nd$name = as.factor(d$name)\nd$survived = as.factor(d$survived)\nd = na.roughfix(d)\n\n# svm = ksvm(formula, data = data.frame(data), kernel=\"rbfdot\", kpar=list(sigma=0.015), C=70, cross=4, prob.model=TRUE)\n\nsvm = ksvm(formula, data = d[!testDataIndex,], kernel=\"rbfdot\", kpar=list(sigma=0.015), C=70, cross=4, prob.model=TRUE, na.action=na.roughfix)\npr = predict(svm, newdata = d[testDataIndex,])\n\n# \ndataLocation = \"input\\\\data\\\\test.csv\"\nrawData = read.csv2(dataLocation, header=TRUE, encoding=\"ANSI\", sep=\",\", strip.white=TRUE, na.strings=c(\"\"))\n\nnames = names(rawData)\nrawData$survived = \"0\"\nrawData = rawData[c(\"survived\", names)]\nrawData$survived = pr\n\nsave(rawData, file=\"output\\\\data\\\\result.RData\")\nwrite.table(rawData, file=\"output\\\\data\\\\result.csv\", sep=\",\", row.names = FALSE)",
    "created" : 1379754431347.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "769215582",
    "id" : "C3F91595",
    "lastKnownWriteTime" : 1371515298,
    "path" : "D:/Dev/Code/DA/kaggle/Titanic/TitanicClassification/output/scripts/classify.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}